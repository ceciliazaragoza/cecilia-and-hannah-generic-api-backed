{"ast":null,"code":"var _jsxFileName = \"/Users/ceciliazaragoza/Documents/WebApp/generic-api-backed-cecilia-and-hannah/src/Info.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Info({\n  query,\n  data\n}) {\n  return !query || !data ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 9\n  }, this) : !(data !== null && data !== void 0 && data.collection.items) || (data === null || data === void 0 ? void 0 : data.collection.items.length) === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"No images for \", query]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this) :\n  /*#__PURE__*/\n  // <div className=\"grid-container\">\n  _jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"image-name\",\n      children: [\"Results for: \", query]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), data.collection.items.map((item, index) =>\n    /*#__PURE__*/\n    // <div key={index} className=\"card\">\n    _jsxDEV(\"div\", {\n      className: \"item\",\n      children: [item.data[0].title, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.links[0].href,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.data[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this)\n\n    // {/* {item.links.map((link, pos) => (\n    //     <div key={pos}>\n    //         link.render == \"image\" &&\n    //         <img src={link.href} alt=\"\"/>\n    //     </div>\n\n    // ))} */}\n    // </div>\n    // give a description for image with alt?\n    )]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n  // use grid to display each of the images, \n  // can set limit to max 10 images (2 by 5 grid)\n  // or could make the grid change depending on how many results output\n}\n_c = Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["Info","query","data","_jsxDEV","fileName","_jsxFileName","lineNumber","columnNumber","collection","items","length","children","className","map","item","index","title","src","links","href","alt","_c","$RefreshReg$"],"sources":["/Users/ceciliazaragoza/Documents/WebApp/generic-api-backed-cecilia-and-hannah/src/Info.js"],"sourcesContent":["export default function Info({query, data}) {\n    \n    return !query || !data ? (\n        <p></p>\n    ) :!data?.collection.items || data?.collection.items.length === 0 ? (\n        <p>No images for {query}</p>\n    ) : (\n        // <div className=\"grid-container\">\n        <div>\n            <h2 className=\"image-name\">Results for: {query}</h2>\n            {/* can see if media is image type data.collection.items[0].links[0].render */}\n            {/* <div>{data.collection.items[0].links[0]}</div> */}\n            {data.collection.items.map((item, index) => (\n                \n                // <div key={index} className=\"card\">\n                <div key={index} className=\"item\">\n                    {item.data[0].title}\n                    <div><img src={item.links[0].href} alt=\"\"/></div>\n                    <p>{item.data[0]}</p>\n                </div>\n                \n                \n                    // {/* {item.links.map((link, pos) => (\n                    //     <div key={pos}>\n                    //         link.render == \"image\" &&\n                    //         <img src={link.href} alt=\"\"/>\n                    //     </div>\n\n                    // ))} */}\n                // </div>\n                // give a description for image with alt?\n            ))}\n        </div>\n    )\n    // use grid to display each of the images, \n    // can set limit to max 10 images (2 by 5 grid)\n    // or could make the grid change depending on how many results output\n}"],"mappings":";;AAAA,eAAe,SAASA,IAAIA,CAAC;EAACC,KAAK;EAAEC;AAAI,CAAC,EAAE;EAExC,OAAO,CAACD,KAAK,IAAI,CAACC,IAAI,gBAClBC,OAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,GACR,EAACL,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEM,UAAU,CAACC,KAAK,KAAI,CAAAP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,UAAU,CAACC,KAAK,CAACC,MAAM,MAAK,CAAC,gBAC7DP,OAAA;IAAAQ,QAAA,GAAG,gBAAc,EAACV,KAAK;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAAA;EAE5B;EACAJ,OAAA;IAAAQ,QAAA,gBACIR,OAAA;MAAIS,SAAS,EAAC,YAAY;MAAAD,QAAA,GAAC,eAAa,EAACV,KAAK;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAGnDL,IAAI,CAACM,UAAU,CAACC,KAAK,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK;IAAA;IAEnC;IACAZ,OAAA;MAAiBS,SAAS,EAAC,MAAM;MAAAD,QAAA,GAC5BG,IAAI,CAACZ,IAAI,CAAC,CAAC,CAAC,CAACc,KAAK,eACnBb,OAAA;QAAAQ,QAAA,eAAKR,OAAA;UAAKc,GAAG,EAAEH,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC,CAACC,IAAK;UAACC,GAAG,EAAC;QAAE;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjDJ,OAAA;QAAAQ,QAAA,EAAIG,IAAI,CAACZ,IAAI,CAAC,CAAC;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAHfQ,KAAK;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV;;IAGD;IACA;IACA;IACA;IACA;;IAEA;IACJ;IACA;IACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CACR;EACD;EACA;EACA;AACJ;AAACc,EAAA,GArCuBrB,IAAI;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}